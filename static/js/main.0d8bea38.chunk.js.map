{"version":3,"sources":["logo.svg","components/Movie/MovieList.js","components/Movie/MovieDetail.js","components/Movie/MovieGallery.js","components/Movie/MovieForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MovieList","event","id","console","log","this","props","movies","length","rows","i","push","react_default","a","createElement","Container","Button","title","Card","Component","MovieDetail","Object","entries","constructor","poster_url","concat","current","poster_path","Grid","column","Content","src","vote_average","release_date","MovieGallery","Column","columns","MovieForm","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","query","baseUrl","apiKey","inputChangeHandler","bind","assertThisInitialized","clickHandler","asc_dsc","rating","alpha","release","_this2","url","axios","get","then","response","setState","data","results","catch","error","_this3","target","value","reverse","sort","b","parseFloat","Number","_this4","BrowserRouter","Input","onChange","label","placeholder","positive","onClick","Link","to","process","Route_default","exact","path","render","Movie_MovieGallery","assign","Movie_MovieDetail","Movie_MovieList","App","className","Movie_MovieForm","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d8bea38.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\nimport {Button, Container, Card} from 'semantic-ui-react'\nimport axios from 'axios'\n\nclass MovieList extends Component {\n  // constructor() {\n  //   super();\n  //\n  //   this.state = {\n  //     id: '',\n  //     movie: {}\n  //   };\n  //   // Example: https://api.themoviedb.org/3/search/movie?api_key=ec6a61d89d885a0573b3aabfa99890f0&query=avengers\n  //   this.baseUrl = 'https://api.themoviedb.org/3/search/movie';\n  //   this.apiKey ='ec6a61d89d885a0573b3aabfa99890f0';\n  //   this.detailClickHandler = this.detailClickHandler.bind(this);\n  // }\n  //\n  // detailClickHandler() {\n  //\n  //   let url = `${this.baseUrl}?api_key=${this.apiKey}&query=${this.state.query}`;\n  //   console.log(url);\n  //   // Get Data\n  //   axios.get(url).then((response) => {\n  //     console.log(response);\n  //\n  //     this.setState({\n  //       movie: response.data.results,\n  //       current: 0\n  //     });\n  //\n  //     console.log(this.state.movies);\n  //   }).catch((error) => {\n  //     console.log(error);\n  //   });\n  // }\n  //<Button onClick={((event) => this.detailHandleClick(event, this.props.movies[i].id)}>\n\n  detailHandleClick(event, id){\n    console.log(id);\n  }\n  render() {\n    if(this.props.movies.length){\n      var rows = [];\n      for (var i = 0; i < this.props.movies.length; i++) {\n        rows.push(\n          <Container>\n            {i+1}.\n    \t \t\t  <Button >\n             {this.props.movies[i].title}\n            </Button>\n    \t    </Container>\n        );\n      }\n      return (\n        <div>\n        <h1>List</h1>\n        {rows}\n        </div>\n      );\n    }\n    else{\n      return (\n        <Card >\n          <h3>No Movie Found Yet!</h3>\n        </Card>\n      )\n    }\n  }\n}\n\nexport default MovieList;\n","import React, { Component } from 'react'\nimport {Button, Card, Grid} from 'semantic-ui-react'\nimport axios from 'axios'\n\nclass MovieDetail extends Component {\n  // constructor() {\n  //   super();\n  //\n  //   this.props = {\n  //     movies: {},\n  //     current: 0\n  //   };\n  //   // Example: https://api.themoviedb.org/3/search/movie?api_key=ec6a61d89d885a0573b3aabfa99890f0&query=avengers\n  //   this.baseUrl = 'https://api.themoviedb.org/3/search/movie';\n  //   this.apiKey ='ec6a61d89d885a0573b3aabfa99890f0';\n  //\n  //   this.prevClick = this.prevClick.bind(this);\n  //   //this.nextClick = this.nextClick.bind(this);\n  //   this.setprops({\n  //     movies: this.props.movies,\n  //     current: this.props.current\n  //   });\n  //\n  // }\n\n  // prevClick() {\n  //     if(this.props.current==0){\n  //       this.setprops({\n  //         current: this.props.movies.length\n  //       });\n  //     }\n  //     else if (this.props.current==this.props.movies.length) {\n  //       this.setprops({\n  //         current: 0\n  //       });\n  //     }\n  //     else{\n  //       this.setprops({\n  //         current: this.props.current-1\n  //       });\n  //     }\n  //\n  // }\n\n    // prevClick() {\n    //     if(this.props.current==0){\n    //       this.props.movies=this.props.movies.length;\n    //     }\n    //     // else if (this.props.current==this.props.movies.length) {\n    //     //   this.props.movies=0;\n    //     // }\n    //     else{\n    //       this.props.movies=this.props.movies-1;\n    //\n    //     }\n    //\n    // }\n\n  render() {\n    const noMovies = Object.entries(this.props.movies).length === 0\n    && this.props.movies.constructor === Object;\n    if (noMovies) {\n      return (\n        <Card >\n          <h3>No Movie yet!</h3>\n        </Card>\n      )\n    }\n    else{\n      if(this.props.movies.length==0){\n        return (\n          <Card >\n            <h3>No Movie Found!</h3>\n          </Card>\n        )\n\n      }\n      else{\n        var poster_url=`https://image.tmdb.org/t/p/w185${this.props.movies[this.props.current].poster_path}`;\n        console.log(poster_url);\n        return (\n          <Grid column={3}>\n          <Button>\n            Previous\n          </Button>\n          <Card>\n          <Card.Content>\n              <h1>\n                {this.props.movies[this.props.current].title}\n              </h1>\n              <h3>\n                Movie ID #: {this.props.movies[this.props.current].id}\n              </h3>\n\n\n              <img src={poster_url} />\n\n              <h4>Rating</h4>\n              {this.props.movies[this.props.current].vote_average}\n              <h4>Release Date</h4>\n              {this.props.movies[this.props.current].release_date}\n            </Card.Content>\n          </Card>\n          <Button >\n            Next\n          </Button>\n          </Grid>\n        );\n      }\n    }\n}\n\n}\n\nexport default MovieDetail;\n","import React, { Component } from 'react'\nimport {Button, Container, Grid, Image, Card} from 'semantic-ui-react'\nimport axios from 'axios'\n\nclass MovieGallery extends Component {\n  render() {\n\n    if(this.props.movies.length==0){\n      return (\n        <Card >\n          <h3>No Movie Found Yet!</h3>\n        </Card>\n      )\n    }\n    else{\n      var rows = [];\n      var complete=[];\n      for (var i = 0; i < this.props.movies.length; i++) {\n        var poster_url=`https://image.tmdb.org/t/p/w185${this.props.movies[i].poster_path}`;\n        // if(i%4==0 && i!=0){\n        //   complete.push(\n        //     <Grid.Row>\n        //       {rows}\n        //     </Grid.Row>\n        //   );\n        //   rows=[];\n        // }\n        rows.push(\n          <Grid.Column>\n    \t \t\t  <Button>\n              <img src={poster_url}/>\n            </Button>\n    \t    </Grid.Column>\n        );\n      }\n      return (\n        <div>\n        <h1>Gallery</h1>\n        <Grid columns={4}>\n          {rows}\n        </Grid>\n        </div>\n      );\n    }\n  }\n}\n\nexport default MovieGallery;\n","import React, { Component } from \"react\";\nimport { Button, Input, Grid, Dropdown } from 'semantic-ui-react';\nimport axios from 'axios';\nimport MovieList from './MovieList'\nimport MovieDetail from './MovieDetail'\nimport MovieGallery from './MovieGallery'\nimport { BrowserRouter as Router, Link } from 'react-router-dom'\nimport Route from 'react-router-dom/Route'\n\n\nclass MovieForm extends Component{\n\n  constructor() {\n    super();\n\n    this.state = {\n      query: '',\n      movies: {},\n      current: 0\n    };\n    // Example: https://api.themoviedb.org/3/search/movie?api_key=ec6a61d89d885a0573b3aabfa99890f0&query=avengers\n    this.baseUrl = 'https://api.themoviedb.org/3/search/movie';\n    this.apiKey ='ec6a61d89d885a0573b3aabfa99890f0';\n\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n    this.asc_dsc = this.asc_dsc.bind(this);\n    this.rating = this.rating.bind(this);\n    this.id= this.id.bind(this);\n    this.alpha= this.alpha.bind(this);\n    this.release= this.release.bind(this);\n\n\n\n\n  }\n//   function prevClick() {\n//     if(this.props.current==0){\n//          this.setstate({\n//            current: this.props.movies.length\n//          });\n//        }\n//        // else if (this.props.current==this.props.movies.length) {\n//        //   this.setprops({\n//        //     current: 0\n//        //   });\n//        // }\n//        else{\n//          this.setstate({\n//            current: this.props.current-1\n//          });\n//        }\n// }\n\n  clickHandler() {\n\n    let url = `${this.baseUrl}?api_key=${this.apiKey}&query=${this.state.query}`;\n    console.log(url);\n    // Get Data\n    axios.get(url).then((response) => {\n      console.log(response);\n\n      this.setState({\n        movies: response.data.results,\n        current: 0\n      });\n\n      console.log(this.state.movies);\n    }).catch((error) => {\n      console.log(error);\n    });\n  }\n\n  inputChangeHandler(event) {\n    this.setState({ query: event.target.value });\n    let url = `${this.baseUrl}?api_key=${this.apiKey}&query=${this.state.query}`;\n    console.log(url);\n    // Get Data\n    axios.get(url).then((response) => {\n      console.log(response);\n\n      this.setState({\n        movies: response.data.results,\n        current: 0\n      });\n\n      console.log(this.state.movies);\n    }).catch((error) => {\n      console.log(error);\n    });\n    this.setState({ query: event.target.value });\n  }\n\n  asc_dsc() {\n    if(this.state.movies){\n      this.setState({\n        movies: this.state.movies.reverse(),\n        current: 0\n      });\n    }\n  }\n  alpha() {\n    if(this.state.movies){\n\n      this.setState({\n        movies: this.state.movies.sort(function(a,b) {\n          if ( a.title < b.title )\n              return -1;\n          if ( a.title > b.title )\n              return 1;\n          return 0;\n      } )\n      });\n      console.log(this.state.movies);\n    }\n  }\n  release() {\n    if(this.state.movies){\n\n      this.setState({\n        movies: this.state.movies.sort(function(a,b) {\n          if ( a.release_date  < b.release_date )\n              return -1;\n          if ( a.release_date > b.release_date )\n              return 1;\n          return 0;\n      } )\n      });\n      this.setState({\n        movies: this.state.movies.reverse()\n      });\n\n      console.log(this.state.movies);\n    }\n\n  }\n  rating() {\n    if(this.state.movies){\n\n      this.setState({\n        movies: this.state.movies.sort((a, b) => parseFloat(a.vote_average) - parseFloat(b.vote_average))\n      });\n      this.setState({\n        movies: this.state.movies.reverse()\n      });\n\n      console.log(this.state.movies);\n    }\n\n  }\n  id() {\n\n    if(this.state.movies){\n\n      this.setState({\n        movies: this.state.movies.sort((a, b) => Number(a.id) - Number(b.id))\n      });\n      this.setState({\n        movies: this.state.movies.reverse()\n      });\n\n      console.log(this.state.movies);\n    }\n\n  }\n\n\n\n  render(){\n    return(\n      <Router>\n      <div>\n        <div>\n          <Input\n            onChange={this.inputChangeHandler}\n            label='Enter a Movie'\n            placeholder='Search Movie....'\n            query={this.state.query}\n          />\n          <Button positive onClick={this.clickHandler}>\n            Search\n          </Button>\n        </div>\n\n        <div>\n          <Grid columns={3}>\n            <span> View: </span>\n            <Link to={process.env.PUBLIC_URL + '/'}>\n              <Button> Gallery </Button>\n            </Link>\n            <Link to={process.env.PUBLIC_URL + '/list'}>\n              <Button> List </Button>\n            </Link>\n            <Link to={process.env.PUBLIC_URL + '/detail'}>\n              <Button> Detail</Button>\n            </Link>\n          </Grid>\n        </div>\n        <div>\n        <Grid columns={3}>\n            <span>Filter By: </span>\n            <Button onClick={this.clickHandler}> Best Match </Button>\n            <Button onClick={this.alpha}> Title </Button>\n            <Button onClick={this.release}> Release Date </Button>\n            <Button onClick={this.rating}> Rating </Button>\n            <Button onClick={this.id}> Movie ID </Button>\n\n\n\n        </Grid>\n        </div>\n          <Button onClick={this.asc_dsc}>\n          Ascend/Descend\n          </Button>\n\n          <Route exact path={process.env.PUBLIC_URL + '/'} render={(props) =>\n            <MovieGallery {...props} movies={this.state.movies}/>}\n          />\n\n          <Route exact path={process.env.PUBLIC_URL + '/detail'} render={(props) =>\n            <MovieDetail {...props} current={this.state.current}\n                                    movies={this.state.movies}/>}\n          />\n\n          <Route exact path={process.env.PUBLIC_URL + '/list'} render={(props) =>\n            <MovieList {...props} movies={this.state.movies}/>}\n          />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default MovieForm;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MovieForm from \"./components/Movie/MovieForm\";\n\nclass App extends Component {\n  render() {\n    return (\n\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">\n            Movies\n          </h1>\n        </header>\n\n        <MovieForm/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}